<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:a="using:Dev.MartijnHoogendoorn.Inking.Behavior.Actions"
    xmlns:b="using:Dev.MartijnHoogendoorn.Inking.Behavior.Behaviors"
    xmlns:c="using:Dev.MartijnHoogendoorn.Inking.Behavior.Converters"
    xmlns:ctrls="using:Dev.MartijnHoogendoorn.Inking.Behavior.Controls"
    xmlns:cp="using:Color_Picker"
    xmlns:i="using:Microsoft.Xaml.Interactivity" 
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:local="using:Dev.MartijnHoogendoorn.Inking.Behavior">

    <c:ColorToBrushConverter x:Key="colorToBrushConverter" />
    <c:NotNullToVisibilityConverter x:Key="notNullToVisibilityConverter" />
    <c:BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
    <c:BooleanNegationConverter x:Key="booleanNegationConverter" />
    <c:SizeToDoubleConverter x:Key="sizeToDoubleConverter" />
    <c:ToolModeComparisonConverter x:Key="toolModeComparisonConverter" />

    <Style x:Key="CenterThumbStyle" TargetType="Thumb">
        <Setter Property="Background" Value="Transparent"/>

        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <Border x:Name="BackgroundPointerOver" BorderBrush="{StaticResource ThumbPointerOverBorderThemeBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ThumbPointerOverBackgroundThemeBrush}" Opacity="0"/>
                        <Border x:Name="BackgroundPressed" BorderBrush="{StaticResource ThumbPressedBorderThemeBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ThumbPressedBackgroundThemeBrush}" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Name="colorPickerTemplate" TargetType="cp:Clr_Pckr">
        <Viewbox x:Name="clrViewbox" >
            <Grid Height="100" Width="100">
                <TextBlock x:Name="test" Height="20" Width="30"/>
                <Border x:Name="reference" Height="1" Width="1" BorderBrush="Blue" BorderThickness="0.5"  />
                <Ellipse x:Name="FinalColor" Fill="Transparent" Height="80" Width="80"/>
                <!--<Border BorderBrush="Black" BorderThickness="1">-->
                <Image Height="100" Width="100"  x:Name="ColorImg" />
                <!--</Border>-->
                <Canvas Height="100" Width="100">
                    <Grid x:Name="pointer" Margin="20,20,0,0" RenderTransformOrigin="3.8,3.8">
                        <Grid.RenderTransform >
                            <CompositeTransform x:Name="rtrnsfrm" Rotation="0"/>
                        </Grid.RenderTransform>
                        <!--<Ellipse HorizontalAlignment="Left" VerticalAlignment="Top" Height="2" Width="2" Fill="White" />-->
                        <!--<Thumb x:Name="thumbPointer" Style="{StaticResource CenterThumbStyle}" Height="8" Width="8"  HorizontalAlignment="Right" VerticalAlignment="Center" />-->
                        <Ellipse Height="8" Width="8" Stroke="Black" StrokeThickness="1" />
                    </Grid>
                </Canvas>
                <Rectangle x:Name="rectColor"    Height="40.5" Width="43" RenderTransformOrigin="0.5,0.5" >
                    <Rectangle.RenderTransform>
                        <RotateTransform Angle="45"/>
                    </Rectangle.RenderTransform>

                    <Rectangle.Fill>
                        <LinearGradientBrush>
                            <GradientStopCollection>
                                <GradientStop x:Name="gdStart" Color="#FFFFFFFF" Offset="0" />
                                <GradientStop x:Name="gdStop" Offset="0.7" Color="#FF41834A"/>
                                <GradientStop x:Name="gdblack" Offset="1" Color="Black"/>
                            </GradientStopCollection>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>
                <Canvas x:Name="innerCanvas" Height="40.5" Width="43" RenderTransformOrigin="0.5,0.5">
                    <Canvas.RenderTransform>
                        <RotateTransform Angle="45" />
                    </Canvas.RenderTransform>
                    <Grid Canvas.Left="20" Canvas.Top="20"  x:Name="innerEll">
                        <Ellipse Height="8" Width="8" Stroke="White" StrokeThickness="1" />
                        <Thumb x:Name="thumbInnerEll"  Style="{StaticResource CenterThumbStyle}"    Height="8" Width="8"  HorizontalAlignment="Right" VerticalAlignment="Center" />
                    </Grid>
                </Canvas>
            </Grid>
        </Viewbox>
    </ControlTemplate>

    <Style TargetType="ctrls:InkToolbarControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctrls:InkToolbarControl">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="{Binding ToolbarHorizontalAlignment}" VerticalAlignment="{Binding ToolbarVerticalAlignment}">
                        <AppBarToggleButton 
                            x:Name="pen" Label="Pen" 
                            IsEnabled="{Binding IsPenEnabled}"
                            Visibility="{Binding IsPenEnabled, Converter={StaticResource booleanToVisibilityConverter}}"
                            IsChecked="{Binding SelectedTool, Converter={StaticResource toolModeComparisonConverter}, ConverterParameter=Pen, Mode=TwoWay}"
                            Command="{Binding SwitchInkingToolCommand, ConverterParameter=Annotate}">
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Holding">
                                    <a:OpenMenuFlyoutAction />
                                </core:EventTriggerBehavior>
                                <core:EventTriggerBehavior EventName="RightTapped">
                                    <a:OpenMenuFlyoutAction />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                            <FlyoutBase.AttachedFlyout>
                                <Flyout>
                                    <StackPanel Orientation="Vertical">
                                        <cp:Clr_Pckr SelectedColor="{Binding PenColor, Mode=TwoWay}" Height="200" Width="200" Template="{StaticResource colorPickerTemplate}" />
                                        <Slider x:Name="penSize" StepFrequency="1" Value="{Binding PenSize, Converter={StaticResource sizeToDoubleConverter}, Mode=TwoWay}" Minimum="5" Maximum="80" />
                                        <Ellipse Height="{Binding Value, ElementName=penSize}" Width="{Binding Value, ElementName=penSize}" Fill="{Binding PenColor, Converter={StaticResource colorToBrushConverter}}" />
                                    </StackPanel>
                                </Flyout>
                            </FlyoutBase.AttachedFlyout>
                            <Viewbox Stretch="Uniform">
                                <Grid>
                                    <Grid.RenderTransform>
                                        <!--bug-->
                                        <TranslateTransform X="30" />
                                    </Grid.RenderTransform>

                                    <Path Fill="Black" Data="M21.72956,33.17422 L21.65525,34.16689 C21.65525,37.13542 22.54725,39.54186 23.64761,39.54186 C24.74797,39.54186 25.63997,37.13542 25.63997,34.16689 L25.56569,33.17422Z M3.4105,3E-05 L3.4105,8.11531 L43.98231,8.11531 L43.98231,3E-05Z M0,0 L47.39286,0 L47.39286,11.52467 L43.39369,11.52467 L34.84364,33.17422 L27.85267,33.17422 L27.46217,36.11061 C26.71003,39.02392 25.03806,41.45453 23.69642,41.45453 C21.90758,41.45453 19.66372,37.26569 19.66372,33.24086 L19.67458,33.17422 L12.54919,33.17422 L3.99914,11.52467 L0,11.52467Z" />
                                    <Path x:Name="pen_tip" Fill="{Binding PenColor, Converter={StaticResource colorToBrushConverter}}" Data="M0.62561,0 L15.50667,0 L15.96842,3.01094 C16.07586,4.07381 16.13228,5.17431 16.13228,6.30147 C16.13228,15.31886 12.52094,22.62892 8.06614,22.62892 C3.61133,22.62892 0,15.31886 0,6.30147 C0,5.17431 0.05644,4.07381 0.16389,3.01094 Z">
                                        <Path.RenderTransform>
                                            <CompositeTransform ScaleX="0.28" ScaleY="0.3" TranslateX="21.4" TranslateY="33.1" />
                                        </Path.RenderTransform>
                                    </Path>
                                    <Path x:Name="pen_top" Fill="{Binding PenColor, Converter={StaticResource colorToBrushConverter}}" Data="M0,0.00908 C0.02206,12.35631 0.08503,24.78814 0.10708,37.13536 L111.00883,37.16358 C110.98875,24.78608 110.96869,12.3775 110.94861,0 L0,0.00908 Z">
                                        <Path.RenderTransform>
                                            <CompositeTransform ScaleX="0.37" ScaleY="0.225" TranslateX="3.32" />
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </Viewbox>
                        </AppBarToggleButton>
                        <AppBarToggleButton 
                            x:Name="marker" Label="Marker" 
                            IsEnabled="{Binding IsMarkerEnabled}"
                            Visibility="{Binding IsMarkerEnabled, Converter={StaticResource booleanToVisibilityConverter}}"
                            IsChecked="{Binding SelectedTool, Converter={StaticResource toolModeComparisonConverter}, ConverterParameter=Marker, Mode=TwoWay}"
                            Command="{Binding SwitchInkingToolCommand, ConverterParameter=Marker}">
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Holding">
                                    <a:OpenMenuFlyoutAction />
                                </core:EventTriggerBehavior>
                                <core:EventTriggerBehavior EventName="RightTapped">
                                    <a:OpenMenuFlyoutAction />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                            <FlyoutBase.AttachedFlyout>
                                <Flyout>
                                    <StackPanel Orientation="Vertical">
                                        <cp:Clr_Pckr SelectedColor="{Binding MarkerColor, Mode=TwoWay}" Height="200" Width="200" Template="{StaticResource colorPickerTemplate}" />
                                        <Slider x:Name="markerSize" StepFrequency="1" Value="{Binding MarkerSize, Converter={StaticResource sizeToDoubleConverter}, Mode=TwoWay}" Minimum="5" Maximum="80" />
                                        <Ellipse Height="{Binding Value, ElementName=markerSize}" Width="{Binding Value, ElementName=markerSize}" Fill="{Binding MarkerColor, Converter={StaticResource colorToBrushConverter}}" />
                                    </StackPanel>
                                </Flyout>
                            </FlyoutBase.AttachedFlyout>
                            <Viewbox Stretch="Uniform">
                                <Grid>
                                    <Path Fill="Black" Data="M62.34397,91.31842 L62.52731,121.64033 L90.45853,105.1295 L90.44567,91.34314 ZM0,0 L12.28672,0 L12.28672,42.97425 L140.68639,42.97425 L140.68639,0 L152.97311,0 L152.97311,48.61775 L142.04433,53.29269 C130.14017,60.23117 120.01178,71.82189 112.85978,86.41117 L112.04753,88.47353 L94.23408,88.47353 L94.23408,108.52308 L58.45142,128.95119 L58.45142,88.47353 L40.92611,88.47353 L40.11361,86.41117 C32.96133,71.82189 22.83294,60.23117 10.92903,53.29269 L0,48.61775 Z" />
                                    <Path x:Name="marker_top" Fill="{Binding MarkerColor, Converter={StaticResource colorToBrushConverter}}" Data="M0,0.00908 C0.02206,12.35631 0.08503,24.78814 0.10708,37.13536 L111.00883,37.16358 C110.98875,24.78608 110.96869,12.3775 110.94861,0 L0,0.00908 Z">
                                        <Path.RenderTransform>
                                            <CompositeTransform ScaleX="1.16" ScaleY="1.16" TranslateX="12" />
                                        </Path.RenderTransform>
                                    </Path>
                                    <Path x:Name="marker_tip" Fill="{Binding MarkerColor, Converter={StaticResource colorToBrushConverter}}" Data="M38.22836,0 L38.22836,18.71925 L0.26453,41.07656 C0.22044,27.40642 0.04408,13.67014 0,0 L38.22836,0 Z">
                                        <Path.RenderTransform>
                                            <CompositeTransform ScaleX="0.74" ScaleY="0.75" TranslateX="62.2" TranslateY="91.2" />
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </Viewbox>
                        </AppBarToggleButton>
                        <AppBarToggleButton 
                            x:Name="eraser" Label="Eraser" 
                            IsEnabled="{Binding IsEraserEnabled}"
                            Visibility="{Binding IsEraserEnabled, Converter={StaticResource booleanToVisibilityConverter}}"
                            IsChecked="{Binding SelectedTool, Converter={StaticResource toolModeComparisonConverter}, ConverterParameter=Eraser, Mode=TwoWay}"
                            Command="{Binding SwitchInkingToolCommand, ConverterParameter=Eraser}">
                            <Viewbox Stretch="Uniform">
                                <Grid>
                                    <Path Fill="black" Data="M25.73072,0 L18.85156,0 L0,19.51303 L0,22.225 L8.33436,30.09636 L40.34894,30.09636 C40.32689,29.34669 40.30486,28.59706 40.28281,27.84739 L11.77394,27.84739 L32.27917,6.74686 L25.73072,0 Z"/>
                                    <Path Fill="white" Data="M5.15708,0 L15.25125,10.09414 L11.77394,13.67239 L40.28281,13.67239 C40.30486,14.42206 40.32689,15.17169 40.34894,15.92136 L8.33436,15.92136 L0,8.05 L0,5.33803 Z">
                                        <Path.RenderTransform>
                                            <TranslateTransform Y="14.2" />
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </Viewbox>
                        </AppBarToggleButton>
                        <AppBarToggleButton 
                            x:Name="annotate" Label="Annotate" 
                            IsEnabled="{Binding IsAnnotationsEnabled}"
                            Visibility="{Binding IsAnnotationsEnabled, Converter={StaticResource booleanToVisibilityConverter}}"
                            IsChecked="{Binding SelectedTool, Converter={StaticResource toolModeComparisonConverter}, ConverterParameter=Annotate, Mode=TwoWay}"
                            Command="{Binding SwitchInkingToolCommand, ConverterParameter=Annotate}">
                            <Viewbox Stretch="Uniform">
                                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE90A;" FontSize="24" />
                            </Viewbox>
                        </AppBarToggleButton>
                        <!--<AppBarToggleButton 
                            x:Name="clip" Label="Clip"
                            IsChecked="{Binding SelectedTool, Converter={StaticResource toolModeComparisonConverter}, ConverterParameter=Clip, Mode=TwoWay}">
                            <Viewbox Stretch="Uniform">
                                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE931;" FontSize="24" />
                            </Viewbox>
                        </AppBarToggleButton>-->
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
